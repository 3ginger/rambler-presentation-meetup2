extends templates/layout

block main
    .words.layer
    .fader.layer
    .titled.window
        h1 Keep it simple, stupid (KISS)
    .subtitled.window
        h1 Бритва Оккамы: «Не следует множить сущее без необходимости»
    .iterative-nature.window
        h1 Есть только один путь развития - итеративный
        p Ничто не береться из воздуха 
        .square.none
        p Все имеет свое начало (а иногда и не одно)
        .acs
            .square.acs
            .square.acs
        p Вбирая разные пропорции своих предков образуется множество
        .dec
            .square.dec
                .square.part
            .square.dec
                .square.part
            .square.dec
                .square.part
        p Через какое то время можно подумать, что все пораждается из воздуха
        .square.none
    .refactoring.window
        h1 Рефакторинг как яркий пример итеративного подхода
        ul
            li Говнокод - не всегда плохо
            li Прототип - это корни рефакторинга
            li Опыт побеждает технологии *
            li Рефакторинг побеждает опыт
    .refactoring-plus.window
        h1 Что же дает рефакторинг?
        ul
            li Рефакторинг дает право экспериментировать
            li Рефакторинг дает понимание, что нужно структурировать, а что не стоит
            li Рефакторинг дает общую картину о проекте
            li Рефакторинг дает способность стирать свой код
            li Рефакторинг дает многогранность мышления
            li Рефакторинг дает право ощутить проект на любом этапе
    .refactoring-other-plus.window
        h1 Что же забирает рефакторинг?
        ul
            li Рефакторинг забирает право писать совершенный код (совершенный значит бесконечный)
            li Рефакторинг стирает рамки проектов
    .choose-tech.window
        h1 Формула для выбора между новой технологией и хорошо знакомой старой технологией *
        ul
            li time_dev - время на разработку проекта
            li coeff_exp - коэффициент опыта ( меньше лучше )
            li time_tech - время на изучение новой технологии
            li coeff_tech - коэффициент технологии ( меньше лучше )
        h3 time_dev * coeff_tech + time_tech < time_dev * coeff_exp
    .convenience.window
        h1 Технологии и индивидуальный выбор
        ul
            li Задачи выбириют технологии
            li Задачи пораждают технологии
            li Технологии не могут существовать без контекста
            li Не бывает универсального удобства
            li Индивидуальность человека обусловлена воспитанием
            li Поиск компромисса
    .about.window
        h1 Презентация подготовлена с помощь:
    .thanks.window
        h1 Спасибо
    .left.button.change-slide <
    .right.button.change-slide >